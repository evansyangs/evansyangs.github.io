(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{564:function(s,e,a){"use strict";a.r(e);var t=a(15),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("Windows Terminal 的全面自定义")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.microsoft.com/zh-cn/p/windows-terminal-preview/9n0dx20hk701",target:"_blank",rel:"noopener noreferrer"}},[s._v("Windows Terminal"),a("OutboundLink")],1),s._v("开源免费，拥有现代化的界面、完整的字体字符渲染机制（包括 Emoji）、GPU 加速和 Fluent 设计风格。")]),s._v(" "),a("p",[s._v("在这篇文章中，我们将会详细介绍一下 Windows Terminal 的设置与自定义方法，并分享一些让 Windows Terminal 实用且美丽起来的小技巧。")]),s._v(" "),a("h2",{attrs:{id:"windows-terminal-的配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows-terminal-的配置文件"}},[s._v("#")]),s._v(" Windows Terminal 的配置文件")]),s._v(" "),a("p",[s._v("在 Windows Terminal 的下拉菜单中，选择 Settings（或使用快捷键 "),a("code",[s._v("Ctrl + ,")]),s._v("），这一操作会使用你系统默认的文本编辑器（推荐"),a("a",{attrs:{href:"https://sspai.com/post/60116",target:"_blank",rel:"noopener noreferrer"}},[s._v("VS Code"),a("OutboundLink")],1),s._v("）打开 Windows Terminal 的配置文件。")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/evansyangs/PicBed/images_for_blogs/2021-03-14/2021-03-14-11-17-39_Windows_Terminal_setting.png",width:"250",alt:"2021-03-14-11-17-39_Windows_Terminal_setting"}})]),s._v(" "),a("p",[s._v("Windows Terminal 的配置文件是一个 "),a("code",[s._v("JSON")]),s._v(" 格式的文件，我们会在其中定义全部 Windows Terminal 的属性。简单来讲，这个配置文件包含了如下的几个部分：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("全局属性")]),s._v("：位于 "),a("code",[s._v("JSON")]),s._v(" 最外侧，包含有设置亮暗主题、默认 Profile 等项目的配置。")]),s._v(" "),a("li",[a("strong",[s._v("环境入口 "),a("code",[s._v("profiles")])]),s._v("：一个list列表，其中包含有 Windows Terminal 下拉菜单中唤起的各种环境（比如打开 PowerShell 环境、WSL 环境或 SSH 至远程服务器的环境……）与各种环境里 Windows Terminal 的显示方案（比如字体、背景、色彩方案等）。")]),s._v(" "),a("li",[a("strong",[s._v("配色主题 "),a("code",[s._v("schemes")])]),s._v("：一个配色方案列表，其中包含有 Windows Terminal 在上一项「环境入口」中可以调用的「色彩主题」。")]),s._v(" "),a("li",[a("strong",[s._v("快捷键绑定 "),a("code",[s._v("keybindings")])]),s._v("：自定义快捷键。")])]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/evansyangs/PicBed/images_for_blogs/2021-03-14/2021-03-14-11-24-09_Profiles_json.png",width:"450",alt:"2021-03-14-11-24-09_Profiles_json"}})]),s._v(" "),a("p",[s._v("熟悉了 Windows Terminal 配置文件的各项含义之后，我们即可开始对 Windows Terminal 的各项属性进行配置。")]),s._v(" "),a("h2",{attrs:{id:"在配置文件中进行自定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在配置文件中进行自定义"}},[s._v("#")]),s._v(" 在配置文件中进行自定义")]),s._v(" "),a("h3",{attrs:{id:"全局属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局属性"}},[s._v("#")]),s._v(" 全局属性")]),s._v(" "),a("p",[s._v("在 Windows Terminal 全局属性这里我们可以定义：")]),s._v(" "),a("ul",[a("li",[s._v("Terminal 亮暗主题设置 "),a("code",[s._v('"requestedTheme"')]),s._v("：可以为 "),a("code",[s._v('"system"')]),s._v("（跟随系统）、"),a("code",[s._v('"light"')]),s._v(" 或 "),a("code",[s._v('"dark"')])]),s._v(" "),a("li",[s._v("Terminal 初始大小："),a("code",[s._v('"initialCols"')]),s._v(" 和 "),a("code",[s._v('"initialRows"')])]),s._v(" "),a("li",[s._v("Terminal 的默认配置文件：设置打开自动进入的环境（通过 GUID 唯一标识码来识别环境）")]),s._v(" "),a("li",[s._v("……")])]),s._v(" "),a("h3",{attrs:{id:"环境入口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境入口"}},[s._v("#")]),s._v(" 环境入口")]),s._v(" "),a("p",[s._v("下拉菜单是 Windows Terminal 唤起各个环境的入口。我们通过点击「下拉菜单」的各个选项，即可唤起不同的 Windows Terminal 环境。")]),s._v(" "),a("p",[s._v("默认情况下，Windows Terminal 已经为我们配置了本机安装的全部命令行环境：包括 PowerShell 环境、cmd 环境以及自家云服务 Azure Cloud Shell 入口。如果你安装了 WSL（Windows Subsystem for Linux），那么 Windows Terminal 也同样将这一环境自动探测并添加。这些环境，就是 Windows Terminal 配置文件中 "),a("code",[s._v('"profiles"')]),s._v(" 属性列表里面的内容，我们同样可以在这一列表中：")]),s._v(" "),a("ul",[a("li",[s._v("自定义某一环境的性质")]),s._v(" "),a("li",[s._v("设置默认打开路径")]),s._v(" "),a("li",[s._v("添加我们自己的环境或命令")])]),s._v(" "),a("h4",{attrs:{id:"自定义某一个环境的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义某一个环境的配置"}},[s._v("#")]),s._v(" 自定义某一个环境的配置")]),s._v(" "),a("p",[s._v("Windows Terminal 的环境配置中可以设置其调用命令（"),a("code",[s._v("commandline")]),s._v("）、字体（"),a("code",[s._v("fontFace")]),s._v("）、颜色方案（"),a("code",[s._v("colorScheme")]),s._v("）、背景颜色（"),a("code",[s._v("background")]),s._v("）与背景图片（"),a("code",[s._v("backgroundImage")]),s._v("）等等。这里我想重点介绍一下为 Windows Terminal 一个特定环境的背景进行设置的方法。")]),s._v(" "),a("p",[s._v("Windows Terminal 的背景可以是一个纯色，"),a("strong",[s._v("也可以是一张高清壁纸、GIF 动图等等")]),s._v("。如果是纯色的背景，在未经设置的情况下这一颜色与你环境所定义的配色方案的颜色一致，你也可以通过控制 "),a("code",[s._v("background")]),s._v(" 这一属性来更换颜色。比如这里我想让 PowerShell 的背景带有一抹独特的「蓝色」，即可这一进行设置：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"profiles"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 项目中 PowerShell 环境的配置\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"background"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#013456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"acrylicOpacity"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"useAcrylic"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("其中：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v('"background"')]),s._v(" 与后面的 HEX 颜色即定义了背景颜色")]),s._v(" "),a("li",[a("code",[s._v('"useAcrylic"')]),s._v(" 表示我们背景会添加 Windows Fluent 设计风格的亚克力着色")]),s._v(" "),a("li",[a("code",[s._v('"acrylicOpacity"')]),s._v(" 定义了亚克力效果的透明度")])]),s._v(" "),a("p",[s._v("当然，背景的设置不止步于此，我们可以直接一张图片作为 Windows Terminal 的背景，不仅可以用于装饰，还可以用于提醒我们当前所在环境。")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("点击查看")]),s._v(" "),a("p",[s._v("首先我们需要进入 Windows Terminal 的素材文件夹，也就是 Windows Terminal 安装目录 "),a("code",[s._v("C:\\Users\\{用户名}\\AppData\\Local\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe")]),s._v(" 里面的 "),a("strong",[a("code",[s._v("RoamingState")]),s._v(" 这一文件夹")]),s._v("，将挑选好的「壁纸」背景放入其中，并记下其文件名。比如，这里我挑选了一张非常有 Windows 特色的壁纸（下载："),a("a",{attrs:{href:"https://wallpaperhub.app/wallpapers/6277",target:"_blank",rel:"noopener noreferrer"}},[s._v("Untitled Goose Wallpaper"),a("OutboundLink")],1),s._v("），将之命名为 "),a("code",[s._v("goose.png")]),s._v("：")]),s._v(" "),a("p",[s._v("之后，在 Windows Terminal PowerShell 的配置模块，我们加入如下的内容，依次定义：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v('"backgroundImage"')]),s._v("：设置背景图片为 "),a("code",[s._v("goose.png")]),s._v("，具体素材路径的语法格式为 "),a("code",[s._v("ms-appdata:///roaming/{图片名}")])]),s._v(" "),a("li",[a("code",[s._v('"backgroundImageStretchMode"')]),s._v("：设置背景图片伸缩模式为「按比例放大」")]),s._v(" "),a("li",[a("code",[s._v('"backgroundImageOpacity"')]),s._v("：设置背景图片透明度为 0.6")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"backgroundImage"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ms-appdata:///roaming/goose.png"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"backgroundImageStretchMode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"uniformToFill"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"backgroundImageOpacity"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),s._v(" "),a("p",[s._v("这样，我们就得到了一个非常 Windows 风格的 PowerShell 终端环境：")]),s._v(" "),a("p",[s._v("当然，我们同样可以为其他环境配置相应的背景图案。为 Windows Terminal 的环境设置背景，还可以提示我们当前所处的位置，防止在生产环境做出错误的操作等。")])]),s._v(" "),a("h4",{attrs:{id:"设置默认打开路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置默认打开路径"}},[s._v("#")]),s._v(" 设置默认打开路径")]),s._v(" "),a("p",[s._v("效果：一打开"),a("code",[s._v("Windows Terminal")]),s._v("的"),a("code",[s._v("WSL")]),s._v("终端就进入到用户的文档目录中。")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"guid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{2c4de342-38b7-51cf-b940-2309a097f518}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ubuntu"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"startingDirectory"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C:\\\\Users\\\\Evan\\\\Documents"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"source"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Windows.Terminal.Wsl"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("如果想要切换到"),a("code",[s._v("WSL")]),s._v("的"),a("code",[s._v("~")]),s._v("目录中，可以将"),a("code",[s._v("startingDirectory")]),s._v("设置为：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"startingDirectory"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"//wsl$/Ubuntu/home/evan"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"启动环境时自动运行命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动环境时自动运行命令"}},[s._v("#")]),s._v(" 启动环境时自动运行命令")]),s._v(" "),a("p",[s._v("Windows Terminal 唤起环境时，实际上是通过执行环境入口配置里面 "),a("code",[s._v("commandline")]),s._v(" 这一属性所定义的命令，来进入相应的环境。**那么，我们可以在点击 Windows Terminal 下拉菜单唤起一个环境时，执行我们自定义的一个命令。**这一命令可以是 SSH 登录远程服务器，可以是调用其他系统环境（比如 Anaconda 环境）等等。我们以 SSH 远程登录为例子，具体介绍如何利用 "),a("code",[s._v("commandline")]),s._v(" 这一属性。")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("点击查看")]),s._v(" "),a("p",[s._v("默认最简单的环境就是 Windows Terminal 的 cmd 环境了，其 profile 定义为：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Make changes here to the cmd.exe profile")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"guid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{0caa0dad-35be-5f56-a8ff-afceeeaa6101}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"commandline"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmd.exe"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("可以看到，事实上这一环境仅定义了 "),a("code",[s._v('"commandline": "cmd.exe"')]),s._v("，也就是在 Windows Terminal 唤起环境时执行 "),a("code",[s._v("cmd.exe")]),s._v(" 这一命令，从而自动进入 cmd 环境。于是，我们只要添加一个执行 SSH 登录服务器的命令的环境配置，即可自动进入远程服务器环境。比如，我们登录服务器的命令是非常简单的：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" root@10.0.0.1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("即：在 PowerShell 环境下，执行上述命令，以 root 身份登录内网 IP 为 10.0.0.12 的服务器（手动输入密码）。那么我们即可这样添加执行这一命令的 Windows Terminal 环境入口：")]),s._v(" "),a("ul",[a("li",[s._v("使用 "),a("a",{attrs:{href:"https://www.uuidgenerator.net/",target:"_blank",rel:"noopener noreferrer"}},[s._v("在线 UUID 生成器"),a("OutboundLink")],1),s._v(" 生成独一无二的 UUID：")])]),s._v(" "),a("p",[s._v("生成 UUID")]),s._v(" "),a("ul",[a("li",[s._v("在 "),a("code",[s._v('"profiles"')]),s._v(" 列表中新建一个最简的环境入口配置，填写 UUID、环境名称、以及具体命令（注意这里我们需要指定用 "),a("code",[s._v("powershell.exe")]),s._v("，否则可能默认使用 cmd 环境）：")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"guid"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{a060905f-d089-43d9-9422-cd748e7f0230}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"SSH"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"commandline"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"powershell.exe ssh root@10.0.0.1"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("为了更加美观实用，我们还可以添加一个图标。我事先准备了一个 GPU 的图标并将之命名为 "),a("code",[s._v("gpu.png")]),s._v("（因为我这台内网服务器是学校训练用的 GPU 服务器），将图标同样放置在 Windows Terminal 素材文件夹 "),a("code",[s._v("RoamingState")]),s._v(" 里，并向刚刚创建的环境入口配置中填入图标的定义：")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"icon"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ms-appdata:///roaming/gpu.png"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),s._v(" "),a("p",[s._v("这样，我们就可以直接唤起这一命令，执行 SSH 登录，进入远程服务器环境。")]),s._v(" "),a("p",[s._v("直接点击标签页即可执行相应的登录命令")]),s._v(" "),a("p",[s._v("想要寻找更多图标的同学，可以在 "),a("a",{attrs:{href:"https://icons8.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("icons8"),a("OutboundLink")],1),s._v("、"),a("a",{attrs:{href:"https://www.iconfont.cn/",target:"_blank",rel:"noopener noreferrer"}},[s._v("iconfont"),a("OutboundLink")],1),s._v(" 等网站上进行搜索，特别是 icons8 的图标，非常精致，且同一类别风格一致，96px 的尺寸也足够用于 Windows Terminal 上，推荐大家使用！")]),s._v(" "),a("p",[s._v("另外，如果你日常使用的环境是 WSL 环境并使用 mosh 进行 SSH 登录（因为 mosh 并不支持 Windows），你同样可以在 "),a("code",[s._v("commandline")]),s._v(" 一处将命令设置为：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commandline"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wsl.exe mosh root@10.0.0.1"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这样依然可以正常执行相应的操作：进入 WSL 环境 » 执行 Linux 独占工具。")])]),s._v(" "),a("h3",{attrs:{id:"配色主题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配色主题"}},[s._v("#")]),s._v(" 配色主题")]),s._v(" "),a("p",[s._v("Windows Terminal 的色彩主题同样是 JSON 文件，我们可以在上文介绍的 "),a("code",[s._v("profiles.json")]),s._v(" 文件的 "),a("code",[s._v("schemes")]),s._v(" 属性处，添加自定义的色彩主题。可能是全网最丰富的终端配色方案集合："),a("a",{attrs:{href:"https://github.com/mbadolato/iTerm2-Color-Schemes",target:"_blank",rel:"noopener noreferrer"}},[s._v("iTerm2 Color Schemes"),a("OutboundLink")],1),s._v("，就包含有为 Windows Terminal 提供的 200 余种色彩方案，位于 "),a("a",{attrs:{href:"https://github.com/mbadolato/iTerm2-Color-Schemes/tree/master/windowsterminal",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("windowsterminal")]),a("OutboundLink")],1),s._v(" 文件夹中。（主题的样式预览可以在 "),a("a",{attrs:{href:"https://iterm2colorschemes.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("iTerm2 Color Scheme 的官网"),a("OutboundLink")],1),s._v(" 查看。）")]),s._v(" "),a("p",[s._v("iTerm2 Color Scheme 项目中的 Windows Terminal 主题均为独立的 JSON 文件，我们挑选好想要添加的主题之后，点击打开对应的主题文件，复制整个 JSON 文件的内容，并粘贴到 Windows Terminal 的配置文件的 "),a("code",[s._v("schemes")]),s._v(" 主题文件列表之中，即可使用这一色彩主题。")]),s._v(" "),a("p",[s._v("之后，我们在 Windows Terminal 配置文件里各个环境入口的配置中，定义使用相应的「色彩主题」，即可让这一环境的配色方案生效：")]),s._v(" "),a("h3",{attrs:{id:"快捷键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快捷键"}},[s._v("#")]),s._v(" 快捷键")]),s._v(" "),a("p",[s._v("在 Windows Terminal 的配置文件末尾，我们可以在 "),a("code",[s._v('"keybindings": []')]),s._v(" 里定义其快捷键绑定。默认的 Windows Terminal 快捷键实际上就非常好用，可以用来快速开启某个环境、实施分屏操作等。这里举几个比较典型的、无需设置即可使用的例子：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Ctrl + Shift + T")]),s._v(" 打开新标签页")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + Shift + 1")]),s._v(" 进入配置文件中定义的第一个环境（"),a("code",[s._v("Ctrl + Shift + 2")]),s._v(" 进入第二个，以此类推）")]),s._v(" "),a("li",[a("code",[s._v("Alt + Shift + -")]),s._v(" 横向分屏；"),a("code",[s._v("Alt + Shift + +")]),s._v(" 纵向分屏")]),s._v(" "),a("li",[a("code",[s._v("Ctrl + +")]),s._v(" 放大、"),a("code",[s._v("Ctrl + -")]),s._v(" 缩小、"),a("code",[s._v("Ctrl + 0")]),s._v(" 恢复默认缩放比例")]),s._v(" "),a("li",[s._v("……")])]),s._v(" "),a("p",[s._v("我们可以在按住 "),a("code",[s._v("Alt")]),s._v(" 的时候，点击 Windows Terminal 下拉菜单的「设置」，进入 Windows Terminal 自动生成的默认配置文件（不要更改这一文件，更改也不会有用的！）。在文件的最后，有 Windows Terminal 默认快捷键绑定可以参考：")]),s._v(" "),a("h2",{attrs:{id:"如何更快地进入工作环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何更快地进入工作环境"}},[s._v("#")]),s._v(" 如何更快地进入工作环境")]),s._v(" "),a("p",[s._v("从 "),a("a",{attrs:{href:"https://devblogs.microsoft.com/commandline/windows-terminal-preview-v0-9-release/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Windows Terminal v0.9"),a("OutboundLink")],1),s._v(" 版本开始，Windows Terminal 支持了「命令行参数」。也就是说，我们现在可以用 "),a("code",[s._v("wt -xxx")]),s._v(" 的命令来唤起 Windows Terminal 打开不同的环境、进入特定的目录，设置直接设置分屏、同时打开多个标签页等。")]),s._v(" "),a("p",[s._v("举几个比较常用的「命令行参数」的例子：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("在当前路径下进入默认的 Windows Terminal 环境：")]),s._v(" "),a("div",{staticClass:"language-powershell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("wt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("使用名为 "),a("code",[s._v("Ubuntu")]),s._v(" 的 WSL 环境打开当前路径：")]),s._v(" "),a("div",{staticClass:"language-powershell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("wt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ubuntu"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("垂直分屏打开 PowerShell 与 WSL 环境：")]),s._v(" "),a("div",{staticClass:"language-powershell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("wt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Windows PowerShell"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" split"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("pane "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("V "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ubuntu"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("p",[s._v("注：完整的 Windows Terminal 命令行参数文档位于 "),a("a",{attrs:{href:"https://github.com/microsoft/terminal/blob/master/doc/user-docs/UsingCommandlineArguments.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("Using the "),a("code",[s._v("wt.exe")]),s._v(" Commandline"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("你可能也发现了，上面的命令有时候并不简单，进入一个环境可能需要重复手动输入复杂的指令。那么，如何才能更快速的唤起某个 Windows Terminal 状态呢？")]),s._v(" "),a("p",[s._v("我们都知道 Windows「右键菜单」的快捷之处：快速在 Windows 自带终端中打开当前目录、快速创建文件夹、快速批量压缩文件……Windows 终极效率利器 Quicker，就是利用「右键菜单」的思想，设计了「全局右键菜单」。")]),s._v(" "),a("p",[a("strong",[s._v("关联阅读：")]),a("a",{attrs:{href:"https://sspai.com/post/55382",target:"_blank",rel:"noopener noreferrer"}},[s._v("Windows 平台的快捷指令：Quicker 使用详解"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("利用 Quicker，我们就可以"),a("strong",[s._v("把 Windows Terminal 命令放进右键菜单里")]),s._v("。下面我以「在当前目录下打开 Windows Terminal 的默认环境」这个动作为例子，为大家介绍如何使用 Quicker 自定义打开 Windows Terminal 的方式。")]),s._v(" "),a("p",[s._v("实际上，从 Quicker 唤起 Windows Terminal 就是使用 Quicker 在当前文件夹下执行这一命令：")]),s._v(" "),a("div",{staticClass:"language-powershell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("wt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("默认情况下，如果我们直接用 Quicker 的「执行动作」这一简单动作直接运行 "),a("code",[s._v("wt -d .")]),s._v("，由于 Quicker 尚未获取到当前命令的执行环境，因此它会按其默认环境执行这一命令，我们也就只能进入默认的 Windows 根目录下。"),a("strong",[s._v("我们需要先获取到当前资源管理器所在路径，之后将这一路径传递给「运行或打开」，将动作的「工作路径」进行设置，才能正确执行命令。")])]),s._v(" "),a("p",[s._v("使用这一动作，我们可以达到类似下面演示的效果：")]),s._v(" "),a("p",[s._v("这一动作我已经发布在 Quicker 的动作库中了："),a("a",{attrs:{href:"https://getquicker.net/Sharedaction?code=4e7abb0c-f213-4ee4-39f5-08d7bfff7792",target:"_blank",rel:"noopener noreferrer"}},[s._v("WT Here"),a("OutboundLink")],1),s._v("，感兴趣的同学可以前往添加下载。发布的动作中我还设置了一个 "),a("code",[s._v("args")]),s._v(" 变量，方便你配置自己的命令行参数。你也可以直接根据我的思路，自行进行动作制作。我觉得使用 Quicker 进行「右键菜单」的定义，"),a("strong",[s._v("比直接修改「注册表」来添加右键菜单的动作要方便得多，且更加安全。")])]),s._v(" "),a("h2",{attrs:{id:"参考文献"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[s._v("#")]),s._v(" 参考文献")]),s._v(" "),a("ol",[a("li",[a("p",[a("a",{attrs:{href:"https://sspai.com/post/59380",target:"_blank",rel:"noopener noreferrer"}},[s._v("新生代 Windows 终端：Windows Terminal 的全面自定义"),a("OutboundLink")],1)])]),s._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://my.oschina.net/liuyuhe/blog/4524702",target:"_blank",rel:"noopener noreferrer"}},[s._v("修改Microsoft Terminal的WSL默认打开路径"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);e.default=n.exports}}]);