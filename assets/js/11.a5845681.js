(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{472:function(t,e,s){"use strict";s.r(e);var a=s(15),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("本文根据优达学城关于Git和GitHub的课程以及相关资料归纳了Git使用的基础知识供读者学习。")])]),t._v(" "),s("h2",{attrs:{id:"course-1-操作提交历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#course-1-操作提交历史"}},[t._v("#")]),t._v(" Course 1 : 操作提交历史")]),t._v(" "),s("h3",{attrs:{id:"_1-课程概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-课程概述"}},[t._v("#")]),t._v(" 1. 课程概述")]),t._v(" "),s("p",[t._v("Git\n:   Git is a version control system")]),t._v(" "),s("p",[t._v("GitHub\n:   GitHub is a code sharing and collaboration platform")]),t._v(" "),s("p",[t._v("What we'll cover?")]),t._v(" "),s("p",[t._v(":   - Lesson 1 : install git + red-only usage")]),t._v(" "),s("p",[t._v(":   - Lesson 2 : read + write git")]),t._v(" "),s("p",[t._v(":   - Lesson 3 : share + collaborate")]),t._v(" "),s("h3",{attrs:{id:"_2-练习查找较大文件之间的差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-练习查找较大文件之间的差异"}},[t._v("#")]),t._v(" 2. 练习查找较大文件之间的差异")]),t._v(" "),s("p",[t._v("Automatically Compare Files")]),t._v(" "),s("ul",[s("li",[t._v("Windows —— FC （file compare）")])]),t._v(" "),s("p",[s("code",[t._v("FC favorite-app-old.html favorite-app.html")])]),t._v(" "),s("ul",[s("li",[t._v("Mac & Linux —— Diff （difference）")])]),t._v(" "),s("p",[s("code",[t._v("diff -u favorite-app-old.html favorite-app.html")])]),t._v(" "),s("h3",{attrs:{id:"_3-windows配置git-bash打开sublime-text-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-windows配置git-bash打开sublime-text-3"}},[t._v("#")]),t._v(" 3. Windows配置Git Bash打开Sublime Text 3")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Find the directory where Sublime is located for you. For many people, this is "),s("code",[t._v("C:/Program\\ Files/Sublime\\ Text\\ 3/sublime_text.exe")]),t._v(" within Git Bash. To test this, run "),s("code",[t._v("dir C:/Program\\ Files/Sublime\\ Text\\ 3/sublime_text.exe")]),t._v(". You should see "),s("code",[t._v("sublime_text.exe")]),t._v(" listed. If you get the error "),s("code",[t._v("No such file or directory")]),t._v(", Sublime is located somewhere else for you and you'll need to find it. For example, it might be "),s("code",[t._v("D:/Sublime\\ Text\\ 3/sublime_text.exe")])])]),t._v(" "),s("li",[s("p",[t._v("Run the following command in Git Bash: "),s("code",[t._v("echo 'alias subl=\"C:/Program\\ Files/Sublime\\ Text\\ 3/sublime_text.exe\"' >> ~/.bashrc")]),t._v(" If Sublime was in a different directory for you in step 1, use that dictory.")])]),t._v(" "),s("li",[s("p",[t._v("Close and re-open Git Bash.")])]),t._v(" "),s("li",[s("p",[t._v("Type "),s("code",[t._v("subl")]),t._v(" in  Git Bash.")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.udacity.com/wiki/ud775/sublime",target:"_blank",rel:"noopener noreferrer"}},[t._v("想要了解更多信息请点击此处"),s("OutboundLink")],1)])])]),t._v(" "),s("h3",{attrs:{id:"_4-git中的手动提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-git中的手动提交"}},[t._v("#")]),t._v(" 4. Git中的手动提交")]),t._v(" "),s("p",[t._v("Commits")]),t._v(" "),s("ul",[s("li",[t._v("In Git terminology, user-created checkpoints are called commits.")]),t._v(" "),s("li",[t._v("Commits are the basic building blocks of Git, each one representing a version of the conetent at one point in time.")]),t._v(" "),s("li",[t._v("Git requires the user to supply commit message each time a commit is created.")])]),t._v(" "),s("h3",{attrs:{id:"_5-使用git浏览历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-使用git浏览历史"}},[t._v("#")]),t._v(" 5. 使用Git浏览历史")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" version-control/asteroids\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/game.js b/game.js\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"_6-多文件git提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-多文件git提交"}},[t._v("#")]),t._v(" 6. 多文件Git提交")]),t._v(" "),s("p",[t._v("Repository(版本库)\n:    Git calls the collection of multiple files that you want to track together a repository.")]),t._v(" "),s("p",[s("code",[t._v("git log --stat")]),t._v(", the --stat option gives some statistics about which files have changed in each commit.")]),t._v(" "),s("h3",{attrs:{id:"_7-克隆和探索版本库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-克隆和探索版本库"}},[t._v("#")]),t._v(" 7. 克隆和探索版本库")]),t._v(" "),s("p",[t._v("克隆版本库")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/udacity/asteroids.git\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("退出 git log")]),t._v(" "),s("blockquote",[s("p",[t._v("要停止查看 git log 的输出，请按 q （表示退出）。")])]),t._v(" "),s("p",[t._v("获得彩色输出")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global color.ui atuo\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("git log\n:   运行git log会列出最近的提交以及相关的信息（包括提交ID）")]),t._v(" "),s("p",[t._v("git diff\n:   运行git diff（后跟两个提交ID）会比较这两个提交的代码版本")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" old.txt nex.txt\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_8-git-错误和警告"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-git-错误和警告"}},[t._v("#")]),t._v(" 8. Git 错误和警告")]),t._v(" "),s("p",[t._v("Should not be doing an octopus（不应执行octopus）\n:   Octpus是 Git 用来合并多个不同代码版本的一种策略。如果在不合适的情况下尝试使用该策略，则可能会出现此消息。")]),t._v(" "),s("p",[t._v("You are in 'detached HEAD' state（你处于“分离的 HEAD”状态）\n:   Git 将你目前所在的提交称为 HEAD。可通过切换到前一个提交来“分离”HEAD，这在下一个视频中有说明。虽然此警告听起来不太好，但分离 HEAD 实际上不是坏事。Git 只是向你发出警告，以便你知道自己正在这样做。")]),t._v(" "),s("p",[t._v("Panic! (the 'impossible' happened)（（天哪！“不可能的事”发生了））\n:   这是真正的错误消息，但它不是由 Git 输出的，而是由 GHC（编程语言 Haskell 的编译器）输出的。它仅在发生特别让人惊讶的错误时才会出现！")]),t._v(" "),s("h3",{attrs:{id:"_9-检出代码的旧版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-检出代码的旧版本"}},[t._v("#")]),t._v(" 9. 检出代码的旧版本")]),t._v(" "),s("p",[t._v("git checkout\n:   Checking out a commit means resetting all of your files to how they were at the time that commit was made.")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"course-2-习题集1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#course-2-习题集1"}},[t._v("#")]),t._v(" Course 2 : 习题集1")]),t._v(" "),s("ol",[s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/34080188590923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Old File Plus Diff"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/34493385670923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tracking Versions Using Git"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/33816788120923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Command Review"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/34508486350923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Behaviour Of Git Clone"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/34338488340923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Behaviour Of Git Log"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/34491186070923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Behaviour Of Git Diff"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/33693594740923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Behaviour Of Git Checkout"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/34269286650923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cloning A New Repository"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/34035787650923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Identifying A Bug"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/34087986270923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fixing The Bug"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/34390386230923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Identifying A Second Bug"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/3394248803/concepts/34404187910923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fixing The Second Bug"),s("OutboundLink")],1)])])]),t._v(" "),s("h2",{attrs:{id:"course-3-创建和修改代码库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#course-3-创建和修改代码库"}},[t._v("#")]),t._v(" Course 3 : 创建和修改代码库")]),t._v(" "),s("h3",{attrs:{id:"_1-版本库有何特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-版本库有何特点"}},[t._v("#")]),t._v(" 1. 版本库有何特点")]),t._v(" "),s("p",[t._v("Repository\n:   For the most part it just looks like a normal directory on your computer. The only real difference is that git repositories store a bunch of metadata about the history of the repository since it was created.")]),t._v(" "),s("p",[t._v("显示隐藏文件.git，使用命令"),s("code",[t._v("ls -a")])]),t._v(" "),s("h3",{attrs:{id:"_2-初始化版本库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-初始化版本库"}},[t._v("#")]),t._v(" 2. 初始化版本库")]),t._v(" "),s("p",[t._v("git init\n:   初始化或创建新的Git代码库")]),t._v(" "),s("h3",{attrs:{id:"_3-检查新版本库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-检查新版本库"}},[t._v("#")]),t._v(" 3. 检查新版本库")]),t._v(" "),s("p",[t._v("git status\n:   To see that this is a git repository, you can run "),s("code",[t._v("git status")]),t._v(". It shows which files have changed since the last commit.")]),t._v(" "),s("h3",{attrs:{id:"_4-暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-暂存区"}},[t._v("#")]),t._v(" 4. 暂存区")]),t._v(" "),s("p",[t._v("Staging area\n:   You can add files one at a time to the staging area.")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" cake-recipe.txt\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" frosting-recipe.txt\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("注意：")]),t._v(" 如果你意外地将某个文件添加到暂存区中，可以使用"),s("code",[t._v("git reset")]),t._v("删除它。")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset cake-recipe.txt\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_5-提交更改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-提交更改"}},[t._v("#")]),t._v(" 5. 提交更改")]),t._v(" "),s("p",[s("strong",[t._v("在提交更改过程中，我遇到一些问题。")])]),t._v(" "),s("ul",[s("li",[t._v("在第一次进行"),s("code",[t._v("git commit")]),t._v("的操作时，出现"),s("code",[t._v("***Please tell me who you are.Run")]),t._v("的信息")])]),t._v(" "),s("p",[t._v("说明Git Bsah没有配置好，因此我们需要进行如下操作来解决这个问题")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your name"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your email@example.com"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ul",[s("li",[t._v("在解决了这个问题之后，进行"),s("code",[t._v("git commit")]),t._v("时出现无法启动sublime的提示")])]),t._v(" "),s("p",[t._v("经过google后，找到如下的解决办法")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.editor "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"'D:/Sublime Text 3/sublime_text.exe' -w -n\"")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("注意：")]),t._v(" 此处，在路径的空格之前不需要添加\\转义字符！")]),t._v(" "),s("h3",{attrs:{id:"_6-再次学习git-diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-再次学习git-diff"}},[t._v("#")]),t._v(" 6. 再次学习git diff")]),t._v(" "),s("ul",[s("li",[t._v("当你找到导致错误的代码部分时，你可以进行修改，修改完成后，通过输入"),s("code",[t._v("git diff")]),t._v("可以比较"),s("code",[t._v("working directory")]),t._v("和"),s("code",[t._v("staging area")]),t._v("中修改的地方。")]),t._v(" "),s("li",[t._v("而当你将修改后的文件通过"),s("code",[t._v("git add")]),t._v("添加至暂存区时，需要运行"),s("code",[t._v("git diff --staged")]),t._v("来显示你的修改(我理解为比较"),s("code",[t._v("staging area")]),t._v("和"),s("code",[t._v("Repository")]),t._v("中该文件的不同之处)。")]),t._v(" "),s("li",[t._v("当你想要放弃工作目录或暂存区的所有更改时，你可以输入"),s("code",[t._v("git reset --hard")]),t._v("，取消你的更改。"),s("strong",[t._v("注意：在运行该命令时一定要小心，因为该命令无法撤销，你需要确定自己不需要这些更改，才能使用该命令。")])])]),t._v(" "),s("p",[s("strong",[t._v("注意：")]),t._v(" 此时，HEAD仍处于检出旧提交时的“分离”状态，而下面的命令将修复该问题。")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_7-分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-分支"}},[t._v("#")]),t._v(" 7. 分支")]),t._v(" "),s("p",[t._v("Branches\n:   When you need to update your records and use this new commit as your real version, Git allows you to create labels for your commits.")]),t._v(" "),s("p",[t._v("Master\n:   Master is the name given to main branch in most Git repositories and every time you create a repository, Git creates a master branch for you.")]),t._v(" "),s("p",[t._v("The tip of the branch\n:   The current last commit on a branch.")]),t._v(" "),s("p",[s("strong",[t._v("Attention:")]),t._v(" If you check out a branch and then make a commit, the branch label automatically updates to the new commit. That branch also stays checked out, so you don't have to check it out again.")]),t._v(" "),s("h3",{attrs:{id:"_8-创建分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-创建分支"}},[t._v("#")]),t._v(" 8. 创建分支")]),t._v(" "),s("p",[t._v("(1). You can use "),s("code",[t._v("git branch")]),t._v(" to show yourself the current branches")]),t._v(" "),s("p",[t._v("(2). Run the following command to create the branch.")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch easy-mode\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("(3). After create the "),s("code",[t._v("easy-mode")]),t._v(" branch, you can run "),s("code",[t._v("git branch")]),t._v(" to see what happens. The shar next to master means that master is the branch that is currently checked out.")]),t._v(" "),s("p",[t._v("(4). You need to run the command "),s("code",[t._v("git checkout easy-mode")]),t._v(" in order to check out the branch.")]),t._v(" "),s("p",[t._v("(5). Then you can modify the codes and commit it.")]),t._v(" "),s("h3",{attrs:{id:"_9-用分支协同工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-用分支协同工作"}},[t._v("#")]),t._v(" 9. 用分支协同工作")]),t._v(" "),s("p",[t._v("You can visualize the branch structure via the following command:")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --graph --oneline master coins\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_10-再次学习分离的head"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-再次学习分离的head"}},[t._v("#")]),t._v(" 10. 再次学习分离的HEAD")]),t._v(" "),s("ul",[s("li",[t._v("当你检出顶点前的ID时，该ID上的提交的commit在检出到Master上就会变的不可访问（即"),s("code",[t._v("git log")]),t._v("无法显示该ID上的commit），除非你记得该ID。")]),t._v(" "),s("li",[t._v("不过你可以使用下面的命令在该ID处创建一个分支：")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b new_branch_name\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_11-通过命令行合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-通过命令行合并"}},[t._v("#")]),t._v(" 11. 通过命令行合并")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("You can run the following command to create a merged version of the two branches.\n"),s("code",[t._v("git merge master coins")])])]),t._v(" "),s("li",[s("p",[t._v("When you want to see the diff between this commit and its parent, you can run the following command.\n"),s("code",[t._v("git show 3884#commit_id")])])]),t._v(" "),s("li",[s("p",[t._v("Then if you don't need the "),s("code",[t._v("coins")]),t._v(" branch, you can run the following command to delete it.\n"),s("code",[t._v("git branch -d coins")])])])]),t._v(" "),s("p",[s("strong",[t._v("注意：")]),t._v(" 由于是合并两个分支，因此在命令行中按何顺序键入分支并不重要。关键是要记住，"),s("code",[t._v("git merge")]),t._v("始终将所有指定的分支合并到当前检出的分支中，并为该分支新建一个提交。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("合并冲突")]),t._v("\n如果你收到类似以下所示的消息：")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Auto-merging game.js\nCONFLICT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": Merge conflict "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" game.js\nAutomatic merge failed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" fix conflicts and "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" commit the result.\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("这表示在你开始合并时，文件的状态不同于  Caroline 的文件状态。要修复此问题，请完成以下步骤：")]),t._v(" "),s("ol",[s("li",[t._v("运行 "),s("code",[t._v("git merge --abort")]),t._v("，将文件恢复到你开始合并之前的状态。")]),t._v(" "),s("li",[t._v("仔细检查文件的状态。如果在检出 master 分支时运行"),s("code",[t._v("git log")]),t._v("，则应看到 Caroline 的“Add color”提交是第二新的提交，而最新的提交应为你修复 bullet 错误的提交。如果使用 "),s("code",[t._v("git diff")]),t._v("将你的提交与 Caroline 的提交进行对比，你的提交应在第 424 行引入"),s("code",[t._v("this.delayBeforeBullet = 10")]),t._v("; 这行代码。应仅使用空格（无制表符）使该行的缩进程度与其下面一行相同，而且该行之后应无空格。")]),t._v(" "),s("li",[t._v("在文件处于正确的状态后，利用你所做的更改新建一个提交。")]),t._v(" "),s("li",[t._v("重新尝试合并。")]),t._v(" "),s("li",[t._v("更多内容请参考"),s("a",{attrs:{href:"https://classroom.udacity.com/courses/ud775/lessons/2969618657/concepts/29892386280923#",target:"_blank",rel:"noopener noreferrer"}},[t._v("此页"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_12-解决合并冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-解决合并冲突"}},[t._v("#")]),t._v(" 12. 解决合并冲突")]),t._v(" "),s("p",[t._v("当你合并分支时可能出现冲突的现象：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout easy-mode\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge master easy-mode\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("在输入上述代码后，可能跳出如下的说明：")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Auto-merging game.js\nCONFLICT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": Merge conflict "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" game.js\nAutomatic merge failed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" fix conflicts and "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" commit the result.\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("于是，就需要手动去解决此冲突。可以将自己修改的代码部分整合入其它人的代码中。在修改后，进行下一步的操作。")]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看git状态")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" game.js\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看git状态")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看第一条记录")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h2",{attrs:{id:"course-4-使用github协作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#course-4-使用github协作"}},[t._v("#")]),t._v(" Course 4 : 使用GitHub协作")]),t._v(" "),s("h3",{attrs:{id:"_1-添加远程版本库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-添加远程版本库"}},[t._v("#")]),t._v(" 1. 添加远程版本库")]),t._v(" "),s("ol",[s("li",[t._v("首先在GitHub上创建一个代码库")]),t._v(" "),s("li",[t._v("然后使用命令"),s("code",[t._v("git remote")]),t._v("查看和创建远程代码库")]),t._v(" "),s("li",[t._v("接着将GitHub上的代码库当作远程代码库，运行命令"),s("code",[t._v("git remote add origin https://gith ub.com/evansyangs/reflections.git")]),t._v("，其中"),s("code",[t._v("origin")]),t._v("为代码库名称，如果你只有一个远程代码库，标准做法是将其命名为origin，同时要提供该远程代码库的URL")]),t._v(" "),s("li",[t._v("再次运行"),s("code",[t._v("git remote")]),t._v("就可以看到origin远程代码库已经创建了")]),t._v(" "),s("li",[t._v("为验证添加的URL正确无误，可以运行"),s("code",[t._v("git remote -v")]),t._v("，输出更多信息")]),t._v(" "),s("li",[t._v("要向远程代码库发送更改，可以使用命令"),s("code",[t._v("git push origin master")]),t._v("，将本地代码库的master分支复制到远程代码库origin上")]),t._v(" "),s("li",[t._v("要从远程代码库拉回主分支时，可以使用命令"),s("code",[t._v("git pull origin master")]),t._v("，将远程代码库origin上的内容同步到本地代码库的master分支上")])]),t._v(" "),s("h3",{attrs:{id:"_2-fork版本库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-fork版本库"}},[t._v("#")]),t._v(" 2. Fork版本库")]),t._v(" "),s("p",[t._v("在GitHub上你可以Fork其它用户的版本库，作为副本存放在自己的账号上，然后可以使用"),s("code",[t._v("git clone")]),t._v("克隆至自己的计算机中，进行本地的代码修改，再push至远程代码库的副本上。")]),t._v(" "),s("h3",{attrs:{id:"_3-更新远程分支的本地副本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-更新远程分支的本地副本"}},[t._v("#")]),t._v(" 3. 更新远程分支的本地副本")]),t._v(" "),s("ul",[s("li",[t._v("如果你对每个代码库进行了不同的更新，即在本地进行了一项更新，然后在远程进行了另一项更新，这将有可能产生冲突。")]),t._v(" "),s("li",[t._v("你可以通过运行命令"),s("code",[t._v("git fetch")]),t._v("更新远程分支的本地副本，而实际的本地版本保持不动。")]),t._v(" "),s("li",[t._v("然后你可以使用"),s("code",[t._v("git merge")]),t._v("将它们包含在master分支中。")]),t._v(" "),s("li",[t._v("实际上当你运行"),s("code",[t._v("git pull")]),t._v("时发生的正是这种情况。首先，远程分支会被取回，更新远程分支的本地副本，然后该分支与本地分支进行合并。")]),t._v(" "),s("li",[t._v("即"),s("code",[t._v("git pull origin master")]),t._v("="),s("code",[t._v("git fetch origin")]),t._v("+"),s("code",[t._v("git merge master origin/master")])])]),t._v(" "),s("h3",{attrs:{id:"_4-创建拉取请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-创建拉取请求"}},[t._v("#")]),t._v(" 4.创建拉取请求")]),t._v(" "),s("p",[t._v("GitHub提供了一种叫"),s("code",[t._v("pull request")]),t._v("的协作方式，这可以请求对方将一些修改加入到master分支中，方便自己拉取。")]),t._v(" "),s("h3",{attrs:{id:"_5-保持fork最新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-保持fork最新"}},[t._v("#")]),t._v(" 5. 保持Fork最新")]),t._v(" "),s("p",[t._v("你可以使用以下命令"),s("code",[t._v("git remote add upstream https://github.com/udacity/create-your-own-adventure.git")]),t._v("与远程代码库连接，然后通过"),s("code",[t._v("git pull upstream master")]),t._v("来更新本地库，接着使用"),s("code",[t._v("git log")]),t._v("查看修改，并合并修改，最后使用命令"),s("code",[t._v("git push origin master")]),t._v("保持Fork最新。")]),t._v(" "),s("h3",{attrs:{id:"_6-github使用的补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-github使用的补充"}},[t._v("#")]),t._v(" 6. Github使用的补充")]),t._v(" "),s("ul",[s("li",[t._v("…or create a new repository on the command line`")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"# test"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" README.md\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" README.md\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first commit"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://github.com/evansyangs/test.git\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("ul",[s("li",[t._v("…or push an existing repository from the command line")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://github.com/evansyangs/test.git\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ul",[s("li",[t._v("…or import code from another repository")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("You can initialize this repository with code from a SubversionMercurial, or TFS project.\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("感谢阅读")])])])}),[],!1,null,null,null);e.default=r.exports}}]);