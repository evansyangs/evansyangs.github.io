(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{492:function(_,v,t){"use strict";t.r(v);var l=t(15),i=Object(l.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"_1-java中的集合框架概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-java中的集合框架概述"}},[_._v("#")]),_._v(" 1. Java中的集合框架概述")]),_._v(" "),t("p",[_._v("概念与作用、体系结构、实际应用")]),_._v(" "),t("ul",[t("li",[_._v("集合的概念：")])]),_._v(" "),t("ol",[t("li",[_._v("现实生活中：很多的事物凑在一起")]),_._v(" "),t("li",[_._v("数学中的集合：具有共同属性的事物的总体")]),_._v(" "),t("li",[_._v("Java中的集合类：是一种工具类，就像是容器，储存任意数量的具有共同属性的对象")])]),_._v(" "),t("ul",[t("li",[_._v("集合的作用")])]),_._v(" "),t("ol",[t("li",[_._v("在类的内部，对数据进行组织；")]),_._v(" "),t("li",[_._v("简单而快速的搜索大数量的条目；")]),_._v(" "),t("li",[_._v("有的集合接口，提供了一系列排列有序的元素，并且可以在序列中间快速的插入或者删除有关元素；")]),_._v(" "),t("li",[_._v("有的集合接口，提供了映射关系，可以通过关键字（key）去快速查找到对应的唯一对象，而这个关键字可以是任意类型。")])]),_._v(" "),t("ul",[t("li",[_._v("与数组的对比——为何选择集合而不是数组")])]),_._v(" "),t("ol",[t("li",[_._v("数组的长度固定，集合长度可变")]),_._v(" "),t("li",[_._v("数组只能通过下标访问元素，类型固定，而有的集合可以通过任意类型查找所映射的具体对象")])]),_._v(" "),t("ul",[t("li",[_._v("Java集合框架体系结构\nCollection:List(ArrayList)、Queue(LinkedList)、Set(HashSet)\nMap:HashMap <Key,Value> Entry(键值对)")])]),_._v(" "),t("h2",{attrs:{id:"_2-collection接口-list接口简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-collection接口-list接口简介"}},[_._v("#")]),_._v(" 2. Collection接口&List接口简介")]),_._v(" "),t("ul",[t("li",[_._v("Collection接口：")])]),_._v(" "),t("ol",[t("li",[_._v("是List、Set和Queue接口的父接口")]),_._v(" "),t("li",[_._v("定义了可用于操作List、Set和Queue的方法——增删改查")])]),_._v(" "),t("ul",[t("li",[_._v("List接口及其实现类——ArrayList")])]),_._v(" "),t("ol",[t("li",[_._v("List是元素有序并且可以重复的集合，被称为序列")]),_._v(" "),t("li",[_._v("List可以精确的控制每个元素的插入位置，或删除某个个位置元素")]),_._v(" "),t("li",[_._v("ArrayList——数组序列，是List的一个重要实现类")]),_._v(" "),t("li",[_._v("ArrayList底层是由数组实现的")])]),_._v(" "),t("h2",{attrs:{id:"_3-泛型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-泛型"}},[_._v("#")]),_._v(" 3. 泛型")]),_._v(" "),t("ul",[t("li",[_._v("集合中的元素，可以是任意类型的对象（对象的引用）\n如果把某个对象放入集合，则会忽略他的类型，而把他当作Object处理")]),_._v(" "),t("li",[_._v("泛型则是规定了某个集合只可以存放特定类型的对象")])]),_._v(" "),t("ol",[t("li",[_._v("会在编译期间进行类型检查")]),_._v(" "),t("li",[_._v("可以直接按指定类型获取集合元素")])]),_._v(" "),t("ul",[t("li",[_._v("泛型集合中的限定类型不能使用基本数据类型")]),_._v(" "),t("li",[_._v("可以通过使用包装类限定允许存入的基本数据类型")])]),_._v(" "),t("h2",{attrs:{id:"_4-set集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-set集合"}},[_._v("#")]),_._v(" 4. Set集合")]),_._v(" "),t("p",[_._v("Set接口及其实现类——HashSet")]),_._v(" "),t("ul",[t("li",[_._v("Set是元素无序并且不可以重复的集合，被称为集")]),_._v(" "),t("li",[_._v("HashSet——哈希集，是Set的一个重要实现类")])])])}),[],!1,null,null,null);v.default=i.exports}}]);