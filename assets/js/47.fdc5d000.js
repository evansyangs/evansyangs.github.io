(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{507:function(t,e,s){"use strict";s.r(e);var a=s(15),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_3-1-selecting-data-for-modeling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-selecting-data-for-modeling"}},[t._v("#")]),t._v(" 3.1 Selecting Data for Modeling")]),t._v(" "),s("p",[t._v("Your dataset had too many variables to wrap your head around, or even to print out nicely. How can you pare down this overwhelming amount of data to something you can understand?")]),t._v(" "),s("p",[t._v("We'll start by picking a few variables using our intuition. Later courses will show you statistical techniques to automatically prioritize variables.")]),t._v(" "),s("p",[t._v("To choose variables/columns, we'll need to see a list of all columns in the dataset. That is done with the "),s("strong",[t._v("columns")]),t._v(" property of the DataFrame (the bottom line of code below).")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" pandas "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" pd\n\nmelbourne_file_path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../input/melbourne-housing-snapshot/melb_data.csv'")]),t._v("\nmelbourne_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read_csv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("melbourne_file_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \nmelbourne_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("columns\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The Melbourne data has some missing values (some houses for which some variables weren't recorded.)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# We'll learn to handle missing values in a later tutorial.  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Your Iowa data doesn't have missing values in the columns you use. ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# So we will take the simplest option for now, and drop houses from our data. ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Don't worry about this much for now, though the code is:")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# dropna drops missing values (think of na as "not available")')]),t._v("\nmelbourne_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" melbourne_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dropna"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("axis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("There are many ways to select a subset of your data. The "),s("a",{attrs:{href:"https://www.kaggle.com/learn/pandas",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pandas Micro-Course"),s("OutboundLink")],1),t._v(" covers these in more depth, but we will focus on two approaches for now.")]),t._v(" "),s("ol",[s("li",[t._v('Dot notation, which we use to select the "prediction target"')]),t._v(" "),s("li",[t._v('Selecting with a column list, which we use to select the "features"')])]),t._v(" "),s("h3",{attrs:{id:"selecting-the-prediction-target"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#selecting-the-prediction-target"}},[t._v("#")]),t._v(" Selecting The Prediction Target")]),t._v(" "),s("p",[t._v("You can pull out a variable with "),s("strong",[t._v("dot-notation")]),t._v(". This single column is stored in a "),s("strong",[t._v("Series")]),t._v(", which is broadly like a DataFrame with only a single column of data.")]),t._v(" "),s("p",[t._v("We'll use the dot notation to select the column we want to predict, which is called the "),s("strong",[t._v("prediction target")]),t._v(". By convention, the prediction target is called "),s("strong",[t._v("y")]),t._v(". So the code we need to save the house prices in the Melbourne data is")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" melbourne_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Price\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"_3-2-choosing-features"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-choosing-features"}},[t._v("#")]),t._v(' 3.2 Choosing "Features"')]),t._v(" "),s("p",[t._v('The columns that are inputted into our model (and later used to make predictions) are called "features." In our case, those would be the columns used to determine the home price. Sometimes, you will use all columns except the target as features. Other times you\'ll be better off with fewer features.')]),t._v(" "),s("p",[t._v("For now, we'll build a model with only a few features. Later on you'll see how to iterate and compare models built with different features.")]),t._v(" "),s("p",[t._v("We select multiple features by providing a list of column names inside brackets. Each item in that list should be a string (with quotes).")]),t._v(" "),s("p",[t._v("Here is an example:")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("melbourne_features "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Rooms'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Bathroom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Landsize'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lattitude'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Longtitude'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("By convention, this data is called "),s("strong",[t._v("X")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("X "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" melbourne_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("melbourne_features"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("Let's quickly review the data we'll be using to predict house prices using the "),s("code",[t._v("describe")]),t._v(" method and the "),s("code",[t._v("head")]),t._v(" method, which shows the top few rows.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("describe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("Visually checking your data with these commands is an important part of a data scientist's job. You'll frequently find surprises in the dataset that deserve further inspection.")]),t._v(" "),s("h2",{attrs:{id:"_3-3-building-your-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-building-your-model"}},[t._v("#")]),t._v(" 3.3 Building Your Model")]),t._v(" "),s("p",[t._v("You will use the "),s("strong",[t._v("scikit-learn")]),t._v(" library to create your models. When coding, this library is written as "),s("strong",[t._v("sklearn")]),t._v(", as you will see in the sample code. Scikit-learn is easily the most popular library for modeling the types of data typically stored in DataFrames.")]),t._v(" "),s("p",[t._v("The steps to building and using a model are:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Define:")]),t._v(" What type of model will it be? A decision tree? Some other type of model? Some other parameters of the model type are specified too.")]),t._v(" "),s("li",[s("strong",[t._v("Fit:")]),t._v(" Capture patterns from provided data. This is the heart of modeling.")]),t._v(" "),s("li",[s("strong",[t._v("Predict:")]),t._v(" Just what it sounds like")]),t._v(" "),s("li",[s("strong",[t._v("Evaluate")]),t._v(": Determine how accurate the model's predictions are.")])]),t._v(" "),s("p",[t._v("Here is an example of defining a decision tree model with scikit-learn and fitting it with the features and target variable.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sklearn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tree "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DecisionTreeRegressor\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Define model. Specify a number for random_state to ensure same results each run")]),t._v("\nmelbourne_model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DecisionTreeRegressor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("random_state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fit model")]),t._v("\nmelbourne_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("Many machine learning models allow some randomness in model training. Specifying a number for "),s("code",[t._v("random_state")]),t._v(" ensures you get the same results in each run. This is considered a good practice. You use any number, and model quality won't depend meaningfully on exactly what value you choose.")]),t._v(" "),s("p",[t._v("We now have a fitted model that we can use to make predictions.")]),t._v(" "),s("p",[t._v("In practice, you'll want to make predictions for new houses coming on the market rather than the houses we already have prices for. But we'll make predictions for the first few rows of the training data to see how the predict function works.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Making predictions for the following 5 houses:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The predictions are"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("melbourne_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("predict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"_3-4-exercise-your-first-machine-learning-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-exercise-your-first-machine-learning-model"}},[t._v("#")]),t._v(" 3.4 Exercise: Your First Machine Learning Model")]),t._v(" "),s("p",[t._v("Try it out yourself in the "),s("strong",[s("a",{attrs:{href:"https://www.kaggle.com/kernels/fork/400771",target:"_blank",rel:"noopener noreferrer"}},[t._v("Model Building Exercise"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"step-1-specify-prediction-target"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-1-specify-prediction-target"}},[t._v("#")]),t._v(" Step 1: Specify Prediction Target")]),t._v(" "),s("p",[t._v("Select the target variable, which corresponds to the sales price. Save this to a new variable called "),s("code",[t._v("y")]),t._v(". You'll need to print a list of the columns to find the name of the column you need.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print the list of columns in the dataset to find the name of the prediction target")]),t._v("\nhome_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("describe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" home_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SalePrice\n\nstep_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("check"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"step-2-create-x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-2-create-x"}},[t._v("#")]),t._v(" Step 2: Create X")]),t._v(" "),s("p",[t._v("Now you will create a DataFrame called "),s("code",[t._v("X")]),t._v(" holding the predictive features.")]),t._v(" "),s("p",[t._v("Since you want only some columns from the original data, you'll first create a list with the names of the columns you want in "),s("code",[t._v("X")]),t._v(".")]),t._v(" "),s("p",[t._v("You'll use just the following columns in the list (you can copy and paste the whole list to save some typing, though you'll still need to add quotes):\n* LotArea\n* YearBuilt\n* 1stFlrSF\n* 2ndFlrSF\n* FullBath\n* BedroomAbvGr\n* TotRmsAbvGrd")]),t._v(" "),s("p",[t._v("After you've created that list of features, use it to create the DataFrame that you'll use to fit the model.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create the list of features below")]),t._v("\nfeature_names "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'LotArea'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'YearBuilt'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1stFlrSF'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2ndFlrSF'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'FullBath'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BedroomAbvGr'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TotRmsAbvGrd'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# select data corresponding to features in feature_names")]),t._v("\nX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" home_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("feature_names"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nstep_2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("check"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"review-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#review-data"}},[t._v("#")]),t._v(" Review Data")]),t._v(" "),s("p",[t._v("Before building a model, take a quick look at "),s("strong",[t._v("X")]),t._v(" to verify it looks sensible")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Review data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print description or statistics from X")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("describe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print the top few lines")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"step-3-specify-and-fit-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-3-specify-and-fit-model"}},[t._v("#")]),t._v(" Step 3: Specify and Fit Model")]),t._v(" "),s("p",[t._v("Create a "),s("code",[t._v("DecisionTreeRegressor")]),t._v(" and save it iowa_model. Ensure you've done the relevant import from sklearn to run this command.")]),t._v(" "),s("p",[t._v("Then fit the model you just created using the data in "),s("code",[t._v("X")]),t._v(" and "),s("code",[t._v("y")]),t._v(" that you saved above.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" sklearn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tree "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DecisionTreeRegressor\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#specify the model. ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#For model reproducibility, set a numeric value for random_state when specifying the model")]),t._v("\niowa_model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DecisionTreeRegressor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("random_state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fit the model")]),t._v("\niowa_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nstep_3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("check"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h3",{attrs:{id:"step-4-make-predictions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-4-make-predictions"}},[t._v("#")]),t._v(" Step 4: Make Predictions")]),t._v(" "),s("p",[t._v("Make predictions with the model's "),s("code",[t._v("predict")]),t._v(" command using "),s("code",[t._v("X")]),t._v(" as the data. Save the results to a variable called "),s("code",[t._v("predictions")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("predictions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iowa_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("predict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("predictions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nstep_4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("check"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"think-about-your-results"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#think-about-your-results"}},[t._v("#")]),t._v(" Think About Your Results")]),t._v(" "),s("p",[t._v("Use the "),s("code",[t._v("head")]),t._v(" method to compare the top few predictions to the actual home values (in "),s("code",[t._v("y")]),t._v(") for those same homes. Anything surprising?")]),t._v(" "),s("p",[t._v("You'll understand why this happened if you keep going.")])])}),[],!1,null,null,null);e.default=n.exports}}]);