(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{519:function(e,t,n){"use strict";n.r(t);var o=n(15),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("You might notice that nodes and edges are not specified as NetworkX objects. This leaves you free to use meaningful items as nodes and edges. The most common choices are numbers or strings, but a node can be any hashable object (except "),n("code",[e._v("None")]),e._v("), and an edge can be associated with any object "),n("code",[e._v("x")]),e._v(" using "),n("code",[e._v("G.add_edge(n1, n2, object=x)")]),e._v(".")]),e._v(" "),n("p",[e._v("As an example, "),n("code",[e._v("n1")]),e._v(" and "),n("code",[e._v("n2")]),e._v(" could be protein objects from the RCSB Protein Data Bank, and "),n("code",[e._v("x")]),e._v(" could refer to an XML record of publications detailing experimental observations of their interaction.")]),e._v(" "),n("p",[e._v("We have found this power quite useful, but its abuse can lead to unexpected surprises unless one is familiar with Python. If in doubt, consider using "),n("a",{attrs:{href:"https://networkx.github.io/documentation/stable/reference/generated/networkx.relabel.convert_node_labels_to_integers.html#networkx.relabel.convert_node_labels_to_integers",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("convert_node_labels_to_integers()")]),n("OutboundLink")],1),e._v(" to obtain a more traditional graph with integer labels.")])])}),[],!1,null,null,null);t.default=a.exports}}]);