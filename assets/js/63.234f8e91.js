(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{523:function(t,e,s){"use strict";s.r(e);var n=s(15),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("The "),s("a",{attrs:{href:"https://networkx.github.io/documentation/stable/reference/classes/digraph.html#networkx.DiGraph",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("DiGraph")]),s("OutboundLink")],1),t._v(" class provides additional properties specific to directed edges, e.g., "),s("a",{attrs:{href:"https://networkx.github.io/documentation/stable/reference/classes/generated/networkx.DiGraph.out_edges.html#networkx.DiGraph.out_edges",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("DiGraph.out_edges()")]),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://networkx.github.io/documentation/stable/reference/classes/generated/networkx.DiGraph.in_degree.html#networkx.DiGraph.in_degree",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("DiGraph.in_degree()")]),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://networkx.github.io/documentation/stable/reference/classes/generated/networkx.DiGraph.predecessors.html#networkx.DiGraph.predecessors",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("DiGraph.predecessors()")]),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://networkx.github.io/documentation/stable/reference/classes/generated/networkx.DiGraph.successors.html#networkx.DiGraph.successors",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("DiGraph.successors()")]),s("OutboundLink")],1),t._v(" etc. To allow algorithms to work with both classes easily, the directed versions of "),s("code",[t._v("neighbors()")]),t._v(" is equivalent to "),s("code",[t._v("successors()")]),t._v(" while "),s("code",[t._v("degree")]),t._v(" reports the sum of "),s("code",[t._v("in_degree")]),t._v(" and "),s("code",[t._v("out_degree")]),t._v(" even though that may feel inconsistent at times.")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("DG "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DiGraph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nDG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_weighted_edges_from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.75")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nDG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out_degree"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" weight"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'weight'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nDG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("degree"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" weight"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'weight'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("successors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("neighbors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("Some algorithms work only for directed graphs and others are not well defined for directed graphs. Indeed the tendency to lump directed and undirected graphs together is dangerous. If you want to treat a directed graph as undirected for some measurement you should probably convert it using "),s("a",{attrs:{href:"https://networkx.github.io/documentation/stable/reference/classes/generated/networkx.Graph.to_undirected.html#networkx.Graph.to_undirected",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Graph.to_undirected()")]),s("OutboundLink")],1),t._v(" or with")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("H "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Graph"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# convert G to undirected graph")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])}),[],!1,null,null,null);e.default=a.exports}}]);